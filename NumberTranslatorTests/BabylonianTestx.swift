// Note: This file is automatically generated
//       It will be overwritten when testing

import Testing
@testable import NumberTranslator

struct Test_Babylonian {
    let translator = BabylonianImplementation()
    @Test func testBabylonian() {
        translator.allowEmptyColumn = false
        #expect(translator.translate(1) == translator.symbolOne)
        #expect(translator.translate(60) == translator.symbolOne+translator.symbolNone) // 6,0
        #expect(translator.translate(61) == translator.symbolOne+translator.symbolOne) // 6,1
        #expect(translator.translate(147) == translator.symbolTwo+translator.symbolTwenty+translator.symbolSeven) // 2,27
        #expect(translator.translate(3661) == translator.symbolOne+translator.symbolOne+translator.symbolOne) // 1,1,1
        #expect(translator.translate(21609) == translator.symbolSix+translator.symbolNone+translator.symbolNine) // 6,0 9.
        #expect(translator.translate(424000) ==  translator.symbolOne+translator.symbolFifty+translator.symbolSeven+translator.symbolForty+translator.symbolSix+translator.symbolForty) // 1,57,46,40

        translator.allowEmptyColumn = true
        #expect(translator.translate(1) == translator.symbolOne)
        #expect(translator.translate(60) == translator.symbolOne) // 6,0 but no empty column :(
        #expect(translator.translate(61) == translator.symbolOne+translator.symbolOne) // 6,1
        #expect(translator.translate(147) == translator.symbolTwo+translator.symbolTwenty+translator.symbolSeven) // 2,27
        #expect(translator.translate(3661) == translator.symbolOne+translator.symbolOne+translator.symbolOne) // 1,1,1
        #expect(translator.translate(21609) == translator.symbolSix+translator.symbolEmptyColumn+translator.symbolNine) // 6,0 9.
        #expect(translator.translate(424000) == translator.symbolOne+translator.symbolFifty+translator.symbolSeven+translator.symbolForty+translator.symbolSix+translator.symbolForty) // 1,57,46,40
    }
}
