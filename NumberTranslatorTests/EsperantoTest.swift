// Note: This file is automatically generated
//       It will be overwritten when testing

import XCTest
import NumberTranslator

final class Test_Esperanto: XCTestCase {
    let translator = EsperantoImplementation()
    func testEsperanto() {
        XCTAssertEqual(translator.translate(0).x, "nul")
        XCTAssertEqual(translator.translate(1).x, "unu")
        XCTAssertEqual(translator.translate(2).x, "du")
        XCTAssertEqual(translator.translate(3).x, "tri")
        XCTAssertEqual(translator.translate(4).x, "kvar")
        XCTAssertEqual(translator.translate(5).x, "kvin")
        XCTAssertEqual(translator.translate(6).x, "ses")
        XCTAssertEqual(translator.translate(7).x, "sep")
        XCTAssertEqual(translator.translate(8).x, "ok")
        XCTAssertEqual(translator.translate(9).x, "naŭ")
        XCTAssertEqual(translator.translate(10).x, "dek")
        XCTAssertEqual(translator.translate(11).x, "dek unu")
        XCTAssertEqual(translator.translate(12).x, "dek du")
        XCTAssertEqual(translator.translate(13).x, "dek tri")
        XCTAssertEqual(translator.translate(16).x, "dek ses")
        XCTAssertEqual(translator.translate(20).x, "dudek")
        XCTAssertEqual(translator.translate(21).x, "dudek unu")
        XCTAssertEqual(translator.translate(22).x, "dudek du")
        XCTAssertEqual(translator.translate(23).x, "dudek tri")
        XCTAssertEqual(translator.translate(24).x, "dudek kvar")
        XCTAssertEqual(translator.translate(30).x, "tridek")
        XCTAssertEqual(translator.translate(42).x, "kvardek du")
        XCTAssertEqual(translator.translate(100).x, "cent")
        XCTAssertEqual(translator.translate(104).x, "cent kvar")
        XCTAssertEqual(translator.translate(105).x, "cent kvin")
        XCTAssertEqual(translator.translate(106).x, "cent ses")
        XCTAssertEqual(translator.translate(221).x, "ducent dudek unu")
        XCTAssertEqual(translator.translate(222).x, "ducent dudek du")
        XCTAssertEqual(translator.translate(223).x, "ducent dudek tri")
        XCTAssertEqual(translator.translate(224).x, "ducent dudek kvar")
        XCTAssertEqual(translator.translate(442).x, "kvarcent kvardek du")
        XCTAssertEqual(translator.translate(1_000).x, "mil")
        XCTAssertEqual(translator.translate(1_729).x, "mil sepcent dudek naŭ")
        XCTAssertEqual(translator.translate(22_729).x, "dudek du mil sepcent dudek naŭ")
        XCTAssertEqual(translator.translate(1_000_000).x, "miliono")
        XCTAssertEqual(translator.translate(2_200_000).x, "du milionoj ducent mil")
        XCTAssertEqual(translator.translate(3_022_729).x, "tri milionoj dudek du mil sepcent dudek naŭ")
        XCTAssertEqual(translator.translate(1_000_000_000).x, "miliardo")
        XCTAssertEqual(translator.translate(4_003_022_729).x, "kvar miliardoj tri milionoj dudek du mil sepcent dudek naŭ")
        XCTAssertEqual(translator.translate(1_000_000_000_000).x, "biliono")
        XCTAssertEqual(translator.translate(5_004_003_022_729).x, "kvin bilionoj kvar miliardoj tri milionoj dudek du mil sepcent dudek naŭ")
        XCTAssertEqual(translator.translate(-1).x, "minus unu")
        XCTAssertEqual(translator.translate(-1_000_000).x, "minus miliono")
        XCTAssertEqual(translator.translate(1.5).x, "unu kaj kvin")
    }
}
